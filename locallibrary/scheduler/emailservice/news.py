import requests
import json
import os
from reportlab.pdfgen.canvas import Canvas
from reportlab.lib.pagesizes import LETTER
from reportlab.lib.units import inch, cm
from reportlab.lib.styles import ParagraphStyle, getSampleStyleSheet
from reportlab.pdfbase.pdfmetrics import stringWidth
from reportlab.platypus import Paragraph, SimpleDocTemplate, Spacer, PageBreak

from datetime import date
#from scheduler.emailservice.NewsPull import pull_news



#return: news: a 2D list of news articles to be later formatted as a pdf in NewsReport.py
def pull_news():
    news = []
    url = "https://rapidapi.p.rapidapi.com/news/list"

    querystring = {"id": "markets"}

    headers = {
        'x-rapidapi-host': "bloomberg-market-and-financial-news.p.rapidapi.com",
        'x-rapidapi-key': ""
    }

    response = requests.request("GET", url, headers=headers, params=querystring)
    response = response.json()
    response = list(response.items())

    articles = response[1][1]

    for i in range(1, len(articles)):
        j = articles[i]['stories']
        if not j == []:
            for l in range(0, len(j)):
                if not j[l]['summary'] == '':
                    news.append([j[l]['title'], j[l]['summary'], j[l]['shortURL'], j[l]['abstract']])
                else:
                    news.append([j[l]['title'], j[l]['autoGeneratedSummary'], j[l]['shortURL'], j[l]['abstract']])

    return news


#return: path: a path to the pdf generated
def build_report():
    news = pull_news()
    report_name = str(date.today().strftime("%m-%d-%y")) + " News Report"
    path = os.getcwd() + r'/scheduler/temporary/'
    report = SimpleDocTemplate(path + report_name + ".pdf")

    newline = Spacer(1,12)
    key_ideas = Paragraph("Key Ideas:", style = getSampleStyleSheet()["Heading4"])

    flowables = []

    title = Paragraph(report_name, style=getSampleStyleSheet()["title"])
    flowables.append(title)

    for i in range(0, len(news)):
        if i != 0 and i % 4 == 0:
            flowables.append(PageBreak())

        headline = Paragraph("<u>" + news[i][0] + "</u>", style = getSampleStyleSheet()["Heading3"])
        text = Paragraph(news[i][1], style = getSampleStyleSheet()["Normal"])
        link = Paragraph("<a href=" + news[i][2] + ''' color="Blue"><u>Full Article</u></a>''', style = getSampleStyleSheet()["Normal"])

        flowables.append(headline)
        flowables.append(text)
        if len(news[i][3]) > 0:
            flowables.append(key_ideas)
            for idea in news[i][3]:
                bullet = Paragraph('â€¢ ' + idea, getSampleStyleSheet()["Normal"])
                flowables.append(bullet)
        flowables.append(newline)
        flowables.append(link)
        flowables.append(newline)
        flowables.append(newline)

    report.build(flowables)
    return path + report_name + ".pdf"
